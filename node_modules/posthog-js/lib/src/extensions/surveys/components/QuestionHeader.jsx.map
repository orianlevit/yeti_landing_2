{"version":3,"file":"QuestionHeader.jsx","sourceRoot":"","sources":["../../../../../src/extensions/surveys/components/QuestionHeader.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,CAAC,EAAE,MAAM,QAAQ,CAAA;AAC1B,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAA;AACzC,OAAO,EAAkB,kBAAkB,EAAE,MAAM,gCAAgC,CAAA;AACnF,OAAO,EAAE,SAAS,EAAE,MAAM,UAAU,CAAA;AACpC,OAAO,EAAE,aAAa,EAAE,0BAA0B,EAAE,MAAM,4BAA4B,CAAA;AAEtF,MAAM,UAAU,cAAc,CAAC,EAQ9B;QAPG,QAAQ,cAAA,EACR,gBAAgB,sBAAA,EAChB,OAAO,aAAA;IAMP,IAAM,cAAc,GAAG,QAAQ,CAAC,IAAI,KAAK,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAA;IACjF,OAAO,CACH,CAAC,GAAG,CAAC,KAAK,CAAC,iBAAiB,CACxB;YAAA,CAAC,cAAc,CAAC,SAAS,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CACzD;gBAAA,CAAC,QAAQ,CAAC,QAAQ,CACtB;YAAA,EAAE,cAAc,CAChB;YAAA,CAAC,QAAQ,CAAC,WAAW;YACjB,0BAA0B,CAAC;gBACvB,SAAS,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,SAAS,EAAE,6BAA6B,EAAE,CAAC;gBAC/D,QAAQ,EAAE,QAAQ,CAAC,WAAW;gBAC9B,YAAY,EAAE,CAAC,gBAAgB,IAAI,QAAQ,CAAC,sBAAsB,KAAK,MAAM;aAChF,CAAC,CACV;QAAA,EAAE,GAAG,CAAC,CACT,CAAA;AACL,CAAC;AAED,MAAM,UAAU,MAAM,CAAC,EAAoC;QAAlC,OAAO,aAAA;IACpB,IAAA,aAAa,GAAK,UAAU,CAAC,aAAa,CAAC,cAA9B,CAA8B;IAEnD,OAAO,CACH,CAAC,MAAM,CACH,SAAS,CAAC,aAAa,CACvB,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,QAAQ,CAAC,CAAC,aAAa,CAAC,CACxB,UAAU,CAAC,cAAc,CACzB,IAAI,CAAC,QAAQ,CAEb;YAAA,CAAC,SAAS,CACd;QAAA,EAAE,MAAM,CAAC,CACZ,CAAA;AACL,CAAC","sourcesContent":["import { h } from 'preact'\nimport { useContext } from 'preact/hooks'\nimport { SurveyQuestion, SurveyQuestionType } from '../../../posthog-surveys-types'\nimport { cancelSVG } from '../icons'\nimport { SurveyContext, renderChildrenAsTextOrHtml } from '../surveys-extension-utils'\n\nexport function QuestionHeader({\n    question,\n    forceDisableHtml,\n    htmlFor,\n}: {\n    question: Pick<SurveyQuestion, 'question' | 'description' | 'descriptionContentType' | 'type'>\n    forceDisableHtml: boolean\n    htmlFor?: string\n}) {\n    const TitleComponent = question.type === SurveyQuestionType.Open ? 'label' : 'h3'\n    return (\n        <div class=\"question-header\">\n            <TitleComponent className=\"survey-question\" htmlFor={htmlFor}>\n                {question.question}\n            </TitleComponent>\n            {question.description &&\n                renderChildrenAsTextOrHtml({\n                    component: h('p', { className: 'survey-question-description' }),\n                    children: question.description,\n                    renderAsHtml: !forceDisableHtml && question.descriptionContentType !== 'text',\n                })}\n        </div>\n    )\n}\n\nexport function Cancel({ onClick }: { onClick: () => void }) {\n    const { isPreviewMode } = useContext(SurveyContext)\n\n    return (\n        <button\n            className=\"form-cancel\"\n            onClick={onClick}\n            disabled={isPreviewMode}\n            aria-label=\"Close survey\"\n            type=\"button\"\n        >\n            {cancelSVG}\n        </button>\n    )\n}\n"]}