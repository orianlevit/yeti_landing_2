{"ast":null,"code":"var _jsxFileName = \"/Users/orian/Documents/Development/yeti_landing/src/context/FormContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormContext = /*#__PURE__*/createContext();\nexport const FormProvider = ({\n  children\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    beastMode: null // for \"Pick your beast mode\"\n    // We'll add more fields as we add more questions\n  });\n  const updateFormData = (field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(FormContext.Provider, {\n    value: {\n      formData,\n      updateFormData\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(FormProvider, \"/Z/pDRSMYO8OPKD+eJ0lkU9LI/k=\");\n_c = FormProvider;\nexport const useFormContext = () => {\n  _s2();\n  const context = useContext(FormContext);\n  if (!context) {\n    throw new Error('useFormContext must be used within a FormProvider');\n  }\n  return context;\n};\n_s2(useFormContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"FormProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","FormContext","FormProvider","children","_s","formData","setFormData","beastMode","updateFormData","field","value","prev","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useFormContext","_s2","context","Error","$RefreshReg$"],"sources":["/Users/orian/Documents/Development/yeti_landing/src/context/FormContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconst FormContext = createContext();\n\nexport const FormProvider = ({ children }) => {\n  const [formData, setFormData] = useState({\n    beastMode: null,  // for \"Pick your beast mode\"\n    // We'll add more fields as we add more questions\n  });\n\n  const updateFormData = (field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  return (\n    <FormContext.Provider value={{ formData, updateFormData }}>\n      {children}\n    </FormContext.Provider>\n  );\n};\n\nexport const useFormContext = () => {\n  const context = useContext(FormContext);\n  if (!context) {\n    throw new Error('useFormContext must be used within a FormProvider');\n  }\n  return context;\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IACvCS,SAAS,EAAE,IAAI,CAAG;IAClB;EACF,CAAC,CAAC;EAEF,MAAMC,cAAc,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IACvCJ,WAAW,CAACK,IAAI,KAAK;MACnB,GAAGA,IAAI;MACP,CAACF,KAAK,GAAGC;IACX,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACEV,OAAA,CAACC,WAAW,CAACW,QAAQ;IAACF,KAAK,EAAE;MAAEL,QAAQ;MAAEG;IAAe,CAAE;IAAAL,QAAA,EACvDA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACZ,EAAA,CAlBWF,YAAY;AAAAe,EAAA,GAAZf,YAAY;AAoBzB,OAAO,MAAMgB,cAAc,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAClC,MAAMC,OAAO,GAAGvB,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAACmB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,mDAAmD,CAAC;EACtE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,cAAc;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}